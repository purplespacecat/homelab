apiVersion: v1
kind: Namespace
metadata:
  name: nfs-provisioner
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: nfs-subdir-external-provisioner
  namespace: kube-system
spec:
  repo: https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/
  chart: nfs-subdir-external-provisioner
  version: 4.0.18
  targetNamespace: nfs-provisioner
  valuesContent: |-
    nfs:
      server: 192.168.100.98
      path: /data
      mountOptions:
        - noatime
        - nodiratime
    storageClass:
      name: nfs-client
      defaultClass: false
      archiveOnDelete: false
      reclaimPolicy: Retain
      pathPattern: ${.PVC.namespace}-${.PVC.name}
      accessModes: ReadWriteOnce
---
# If you're not using k3s/Rancher, use this deployment instead:
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: nfs-client-provisioner
#   namespace: nfs-provisioner
# ---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: nfs-client-provisioner-runner
# rules:
#   - apiGroups: [""]
#     resources: ["persistentvolumes"]
#     verbs: ["get", "list", "watch", "create", "delete"]
#   - apiGroups: [""]
#     resources: ["persistentvolumeclaims"]
#     verbs: ["get", "list", "watch", "update"]
#   - apiGroups: ["storage.k8s.io"]
#     resources: ["storageclasses"]
#     verbs: ["get", "list", "watch"]
#   - apiGroups: [""]
#     resources: ["events"]
#     verbs: ["create", "update", "patch"]
# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: run-nfs-client-provisioner
# subjects:
#   - kind: ServiceAccount
#     name: nfs-client-provisioner
#     namespace: nfs-provisioner
# roleRef:
#   kind: ClusterRole
#   name: nfs-client-provisioner-runner
#   apiGroup: rbac.authorization.k8s.io
# ---
# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: leader-locking-nfs-client-provisioner
#   namespace: nfs-provisioner
# rules:
#   - apiGroups: [""]
#     resources: ["endpoints"]
#     verbs: ["get", "list", "watch", "create", "update", "patch"]
# ---
# kind: RoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: leader-locking-nfs-client-provisioner
#   namespace: nfs-provisioner
# subjects:
#   - kind: ServiceAccount
#     name: nfs-client-provisioner
#     namespace: nfs-provisioner
# roleRef:
#   kind: Role
#   name: leader-locking-nfs-client-provisioner
#   apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nfs-client-provisioner
#   namespace: nfs-provisioner
# spec:
#   replicas: 1
#   strategy:
#     type: Recreate
#   selector:
#     matchLabels:
#       app: nfs-client-provisioner
#   template:
#     metadata:
#       labels:
#         app: nfs-client-provisioner
#     spec:
#       serviceAccountName: nfs-client-provisioner
#       containers:
#         - name: nfs-client-provisioner
#           image: registry.k8s.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
#           volumeMounts:
#             - name: nfs-client-root
#               mountPath: /persistentvolumes
#           env:
#             - name: PROVISIONER_NAME
#               value: k8s-sigs.io/nfs-subdir-external-provisioner
#             - name: NFS_SERVER
#               value: 192.168.100.98
#             - name: NFS_PATH
#               value: /data
#       volumes:
#         - name: nfs-client-root
#           nfs:
#             server: 192.168.100.98
#             path: /data