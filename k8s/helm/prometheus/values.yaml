prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: false

prometheus:
  enabled: true
  prometheusSpec:
    retention: 30d
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-db
        spec:
          storageClassName: nfs-storage
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector:
            matchLabels:
              app: prometheus
              component: server
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - "prometheus.local"
      - "prometheus.192.168.100.202.nip.io"  # Updated to use the correct IP
    paths:
      - "/"
    pathType: Prefix

grafana:
  enabled: true
  persistence:
    enabled: true
    storageClassName: nfs-storage
    size: 10Gi
    selector:
      matchLabels:
        app: grafana
        component: server
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - "grafana.local"
      - "grafana.192.168.100.202.nip.io"  # Updated to use the correct IP
    paths:
      - "/"
    pathType: Prefix
  adminUser: admin
  adminPassword: "admin"

alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        metadata:
          name: alertmanager-db
        spec:
          storageClassName: nfs-storage
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector:
            matchLabels:
              app: alertmanager
              component: server
    podMetadata:
      labels:
        app: alertmanager
        component: server
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - "alertmanager.local"
      - "alertmanager.192.168.100.202.nip.io"  # Updated to use the correct IP
    paths:
      - "/"
    pathType: Prefix

kubeScheduler:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false

nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true
