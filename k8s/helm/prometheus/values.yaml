prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: false

prometheus:
  enabled: true
  prometheusSpec:
    retention: 30d
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-db
        spec:
          storageClassName: nfs-client-dynamic  # Updated to use dynamic provisioner
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "selfsigned-issuer"
    hosts:
      - "prometheus.local"
      - "prometheus.192.168.100.202.nip.io"
    paths:
      - "/"
    pathType: Prefix
    tls:
      - secretName: prometheus-tls
        hosts:
          - "prometheus.local"
          - "prometheus.192.168.100.202.nip.io"

grafana:
  enabled: true
  persistence:
    enabled: true
    storageClassName: nfs-client-dynamic  # Updated to use dynamic provisioner
    size: 10Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "selfsigned-issuer"
    hosts:
      - "grafana.local"
      - "grafana.192.168.100.202.nip.io"
    paths:
      - "/"
    pathType: Prefix
    tls:
      - secretName: grafana-tls
        hosts:
          - "grafana.local"
          - "grafana.192.168.100.202.nip.io"
  # Using a secure random password and storing in a secret
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-user
    passwordKey: admin-password
  # Removed hardcoded credentials

alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        metadata:
          name: alertmanager-db
        spec:
          storageClassName: nfs-client-dynamic  # Updated to use dynamic provisioner
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    podMetadata:
      labels:
        app: alertmanager
        component: server
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "selfsigned-issuer"
    hosts:
      - "alertmanager.local"
      - "alertmanager.192.168.100.202.nip.io"
    paths:
      - "/"
    pathType: Prefix
    tls:
      - secretName: alertmanager-tls
        hosts:
          - "alertmanager.local"
          - "alertmanager.192.168.100.202.nip.io"

kubeScheduler:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false

nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true
